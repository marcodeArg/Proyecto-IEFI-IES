<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="prtDialog.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="prtDocument.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>136, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>